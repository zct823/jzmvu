////  ContactViewController.m//  myjam////  Created by nazri on 11/8/12.//  Copyright (c) 2012 me-tech. All rights reserved.//#import "ContactViewController.h"#import "Barcode.h"#import "ASIWrapper.h"#import "CustomAlertView.h"#import "FontLabel.h"#import <Twitter/Twitter.h>#define kFrameHeightOnKeyboardUp 1066.0f#define kFrameHeightOnKeyboardDown 1386.0f#define kStartTitleY 1030.0f#define kStartDescriptionY 30.0f@interface ContactViewController ()@end@implementation ContactViewController- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil{    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];    if (self) {        // Custom initialization        //self.navigationItem.title = @"Create";                //TITLE        self.title = @"Create";        FontLabel *titleView = [[FontLabel alloc] initWithFrame:CGRectZero fontName:@"jambu-font.otf" pointSize:22];        titleView.text = self.title;        titleView.textAlignment = NSTextAlignmentCenter;        titleView.backgroundColor = [UIColor clearColor];        titleView.textColor = [UIColor whiteColor];        [titleView sizeToFit];        self.navigationItem.titleView = titleView;        [titleView release];                // Init scrollview        self.scroller = (TPKeyboardAvoidingScrollView *)self.view;                [self.scroller setContentSize:self.contentView.frame.size];        [self.scroller addSubview:self.contentView];            }    return self;}- (void)textFieldDidBeginEditing:(UITextField *)textField{    [self.scroller setContentSize:CGSizeMake(self.contentView.frame.size.width, kFrameHeightOnKeyboardUp)];    [self.scroller adjustOffsetToIdealIfNeeded];}-(void)textFieldDidEndEditing:(UITextField *)textField{    [self.scroller setContentSize:CGSizeMake(self.contentView.frame.size.width, kFrameHeightOnKeyboardUp+44)];}- (BOOL)textFieldShouldReturn:(UITextField *)textField{    [textField resignFirstResponder];    return YES;}- (void)viewDidLoad{    [super viewDidLoad];        [self.previewButton addTarget:self action:@selector(checkMandatoryFieldFirst) forControlEvents:UIControlEventTouchUpInside];        [self.saveButton addTarget:self action:@selector(saveCreatedQR) forControlEvents:UIControlEventTouchUpInside];        self.categories = [[NSMutableDictionary alloc] init];        // Setup pickerview    self.pickerView = [[UIPickerView alloc] init];    // Calculate the screen's width.//    float screenWidth = [UIScreen mainScreen].bounds.size.width;//    float pickerWidth = screenWidth * 3 / 4;        // Calculate the starting x coordinate.//    float xPoint = screenWidth / 2 - pickerWidth / 2;        // Set pickerview delegate    self.pickerView.delegate = self;    self.pickerView.dataSource = self;        // Set the picker's frame. We set the y coordinate to 50px.//    [self.pickerView setFrame: CGRectMake(xPoint, 50.0f, pickerWidth, 180.0f)];    self.pickerView.showsSelectionIndicator = YES;        // Toolbar for pickerView    UIToolbar *toolbar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];    toolbar.barStyle = UIBarStyleBlack;        UIBarButtonItem *doneButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(pickerDoneClicked:)];        UIBarButtonItem *spacer = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];    //    UIBarButtonItem *cancelButton = [[UIBarButtonItem alloc] initWithTitle:@"Clear" style:UIBarButtonItemStyleBordered target:self action:@selector(pickerCancelClicked)];//        [toolbar setItems:[NSArray arrayWithObjects:spacer, doneButton, nil]];    self.categoryTextField.inputAccessoryView = toolbar;//    [self.view addSubview:self.pickerView];    //    // Init the category data//    [self getCategoriesFromAPI];//    // Set list for pickerView//    self.dataArray = [[NSMutableArray alloc] initWithArray:[self.categories allKeys]];//    [self.dataArray sortUsingSelector:@selector(localizedCaseInsensitiveCompare:)];    //    NSLog(@"count %d", [self.categories count]);    self.categoryTextField.inputView = self.pickerView;        // Set textfield delegate to enable dismiss keyboard    self.appTitleTextField.delegate = self;    self.nameTextField.delegate = self;    self.organizationTextField.delegate = self;    self.emailTextField.delegate = self;    self.mobileTextField.delegate = self;    self.phoneTextField.delegate = self;    self.faxTextField.delegate = self;    self.addressTextField.delegate = self;    self.cityTextField.delegate = self;    self.postcodeTextField.delegate = self;    self.stateTextField.delegate = self;    self.countryTextField.delegate = self;    self.urlTextField.delegate = self;        self.urlTextField.text = @"http://";        self.contentView.frame = CGRectMake(0, 0.0f, self.contentView.frame.size.width, kFrameHeightOnKeyboardUp+44);        // setup descLabel / fulltext inside UIView    self.titleLabel = [[UILabel alloc] init];    self.descLabel = [[UILabel alloc] init];        //setup titleView    self.titleView = [[UIView alloc] init];    //setup descView    self.descView = [[UIView alloc] init];        [self.shareView setHidden:YES];        // Setup share button in shareVIew    [self.shareFBButton addTarget:self action:@selector(shareImageOnFB) forControlEvents:UIControlEventTouchUpInside];    [self.shareTwitterButton addTarget:self action:@selector(shareImageOnTwitter) forControlEvents:UIControlEventTouchUpInside];    [self.shareEmailButton addTarget:self action:@selector(shareImageOnEmail) forControlEvents:UIControlEventTouchUpInside];}- (void)viewDidAppear:(BOOL)animated{    if (![self.dataArray count]) {//        [self performSelectorInBackground:@selector(setupCategoryList) withObject:nil];        [self setupCategoryList];    }}- (void)setupCategoryList{    // Init the category data    [self getCategoriesFromAPI];    // Set list for pickerView    self.dataArray = [[NSMutableArray alloc] initWithArray:[self.categories allKeys]];    [self.dataArray sortUsingSelector:@selector(localizedCaseInsensitiveCompare:)];}#pragma mark -#pragma mark share action handler- (void)addShareItemtoServer:(NSString *)aQRcodeId withShareType:(NSString *)aType{    NSString *urlString = [NSString stringWithFormat:@"%@/api/qrcode_share.php?token=%@",APP_API_URL,[[[NSUserDefaults standardUserDefaults] objectForKey:@"tokenString"]mutableCopy]];        NSString *dataContent = [NSString stringWithFormat:@"{\"qrcode_id\":%@,\"share_type\":\"%@\"}",aQRcodeId,aType];        NSString *response = [ASIWrapper requestPostJSONWithStringURL:urlString andDataContent:dataContent];    NSLog(@"abc: %@, def:%@",dataContent, response);    NSDictionary *resultsDictionary = [[response objectFromJSONString] mutableCopy];        if([resultsDictionary count])    {        NSString *status = [resultsDictionary objectForKey:@"status"];                if ([status isEqualToString:@"ok"])        {            NSLog(@"Success share");        }        else{            NSLog(@"share error!");        }    }    }- (void)shareImageOnEmail{        if ([MFMailComposeViewController canSendMail])    {        MFMailComposeViewController *mailer = [[MFMailComposeViewController alloc] init];        mailer.mailComposeDelegate = self;        [mailer setSubject:@"JAM-BU App"];        UIImage *myImage = self.imagePreview.image;        NSData *imageData = UIImagePNGRepresentation(myImage);        [mailer addAttachmentData:imageData mimeType:@"image/png" fileName:qrcodeId];        NSString *emailBody = [NSString stringWithFormat:@"Scan this QR code. \n\nJAM-BU App: %@/?qrcode_id=%@",APP_API_URL,qrcodeId];        [mailer setMessageBody:emailBody isHTML:NO];        [self presentModalViewController:mailer animated:YES];        [mailer release];                [self addShareItemtoServer:qrcodeId withShareType:@"email"];    }    else    {        CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Save" message:@"Please configure your mail in Mail Application" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];        [alert show];        [alert release];    }        }- (void)shareImageOnTwitter{    //CHECK VERSION FIRST. Constant can refer from Constant.h    if(SYSTEM_VERSION_EQUAL_TO(@"5.0") || SYSTEM_VERSION_EQUAL_TO(@"5.1"))    {        [self twitterAPIShare];    }    else if(SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"6.0"))    {        [self callAPIShare:kOPTION_TWITTER];    }}- (void)shareImageOnFB{    //check version first and then call method    if(SYSTEM_VERSION_EQUAL_TO(@"5.0") || SYSTEM_VERSION_EQUAL_TO(@"5.1"))    {        CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Unsupported iOS Version" message:@"Sorry. Your iOS version doesn't support Facebook Share." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];        [alert show];        [alert release];    }    else if(SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"6.0"))    {        [self callAPIShare:kOPTION_FB];    }}- (void)twitterAPIShare //for iOS 5 and 5.1{    TWTweetComposeViewController *twitter = [[TWTweetComposeViewController alloc] init];        [twitter setInitialText:@""];    [twitter addImage:self.imagePreview.image];        [self presentViewController:twitter animated:YES completion:nil];        twitter.completionHandler = ^(TWTweetComposeViewControllerResult res) {                if(res == TWTweetComposeViewControllerResultDone) {                        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Success" message:@"Successfully posted." delegate:self cancelButtonTitle:@"OK" otherButtonTitles: nil];                        [alert show];            [alert release];                        [self addShareItemtoServer:qrcodeId withShareType:@"twitter"];                    }        if(res == TWTweetComposeViewControllerResultCancelled) {            /*             UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"Cancelled" message:@"You Cancelled posting the Tweet." delegate:self cancelButtonTitle:@"Dismiss" otherButtonTitles: nil];                          [alert show];             */        }        [self dismissModalViewControllerAnimated:YES];            };        }- (void)callAPIShare:(int)option{    NSString *serviceType = nil;    NSString *type = nil;    if (option == kOPTION_FB) {        serviceType = SLServiceTypeFacebook;        type = @"Facebook";    }else if (option == kOPTION_TWITTER){        serviceType = SLServiceTypeTwitter;        type = @"Twitter";    }        mySLComposerSheet = [[SLComposeViewController alloc] init];    mySLComposerSheet = [SLComposeViewController composeViewControllerForServiceType:serviceType];        if([SLComposeViewController isAvailableForServiceType:serviceType]) //check if account is linked    {                [mySLComposerSheet addImage:self.imagePreview.image];        [self presentViewController:mySLComposerSheet animated:YES completion:nil];                [mySLComposerSheet setCompletionHandler:^(SLComposeViewControllerResult result) {            NSString *output;            switch (result) {                case SLComposeViewControllerResultCancelled:                    output = @"Action Cancelled";                    [self dismissModalViewControllerAnimated:YES];                    break;                case SLComposeViewControllerResultDone:                    output = @"Post Successful";                    CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Save" message:output delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];                    [alert show];                    [alert release];                    [self dismissModalViewControllerAnimated:YES];                    break;                                        [self addShareItemtoServer:qrcodeId withShareType:[type lowercaseString]];            }                    }];                            }else{        CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Save" message:[NSString stringWithFormat:@"Please add your %@ account in IOS Device Settings",type] delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];        [alert show];        [alert release];    }        }#pragma mark -#pragma mark alertViewDelegate-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{    if (alertView.tag == kAlertNoConnection) {        [self.navigationController popToRootViewControllerAnimated:YES];    }else{        if (buttonIndex == 1) {            [DejalBezelActivityView activityViewForView:self.view withLabel:@"Loading ..." width:100];            NSLog(@"saved");            [self performSelector:@selector(processCreateContactQR) withObject:nil afterDelay:0.0];//            [self performSelectorOnMainThread:@selector(processCreateContactQR) withObject:nil waitUntilDone:YES];//            [self processCreateContactQR];        }    }    }- (void)saveCreatedQR{    [self.view endEditing:YES];        // If OK, go to alertview delegate    CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Save" message:@"You cannot make any changes once it is saved. Press OK to continue." delegate:self cancelButtonTitle:@"Cancel" otherButtonTitles:@"OK",nil];    alert.tag = kAlertSave;    [alert show];    [alert release];}- (void)checkMandatoryFieldFirst{        [self.view endEditing:YES];        if ([self.appTitleTextField.text length] == 0)    {        reqFieldName = @"JAM-BU App Title";        [self triggerRequiredAlert];    }    else if ([self.categoryTextField.text length] == 0)    {        reqFieldName = @"Category";        [self triggerRequiredAlert];    }    else if ([self.nameTextField.text length] == 0)    {        reqFieldName = @"Name";        [self triggerRequiredAlert];    }    else if ([self.mobileTextField.text length] == 0)    {        reqFieldName = @"Mobile Phone Number";        [self triggerRequiredAlert];    }    else    {        [self updatePreview];    }}- (void)triggerRequiredAlert{    NSString *reqMsg = [NSString stringWithFormat:@"%@ is required.",reqFieldName];        CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"JAM-BU Register" message:reqMsg delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];    [alert show];    [alert release];}- (void)updatePreview{    [self.view endEditing:YES];        for (UIView *aView in [self.view subviews]) {        if (aView == self.titleView || aView == self.descView || aView == self.titleLabel || aView == self.descLabel) {            [aView removeFromSuperview];        }    }        NSLog(@"update Preview");    NSString *appTitle = [NSString stringWithFormat:@"%@",self.appTitleTextField.text];        NSString *contactName = [NSString stringWithFormat:@"%@",self.nameTextField.text];    NSString *contactAddress = @"";        // setup descLabel / fulltext inside UIView    self.titleLabel.frame = CGRectMake(0, 0, 200, 30);    self.descLabel.frame = CGRectMake(0, 0, 200, 50);            if ([self.addressTextField.text length] > 0) {        contactAddress = [contactAddress stringByAppendingFormat:@"%@, ",self.addressTextField.text];    }    if ([self.cityTextField.text length] > 0) {        contactAddress = [contactAddress stringByAppendingFormat:@"%@, ",self.cityTextField.text];    }    if ([self.postcodeTextField.text length] > 0) {        contactAddress = [contactAddress stringByAppendingFormat:@"%@, ",self.postcodeTextField.text];    }    if ([self.stateTextField.text length] > 0) {        contactAddress = [contactAddress stringByAppendingFormat:@"%@, ",self.stateTextField.text];    }    if ([self.countryTextField.text length] > 0) {        contactAddress = [contactAddress stringByAppendingFormat:@"%@, ",self.countryTextField.text];    }        NSString *contactMobile = [NSString stringWithFormat:@"%@",self.mobileTextField.text];        self.titleLabel.text = [NSString stringWithFormat:@"%@",appTitle];        self.descLabel.text = [NSString stringWithFormat:@"Name: %@\nMobile: %@\n", contactName, contactMobile];            if ([self.phoneTextField.text length] > 0) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"Phone: %@\n",self.phoneTextField.text];    }    if ([self.organizationTextField.text length] > 0) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"Organization: %@\n",self.organizationTextField.text];    }    if ([self.emailTextField.text length] > 0) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"Email: %@\n",self.emailTextField.text];    }    if ([self.faxTextField.text length] > 0) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"Fax: %@\n",self.faxTextField.text];    }    if ([contactAddress length] > 0) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"Address: %@\n",contactAddress];    }    if ([self.urlTextField.text length] > 7 && [self.urlTextField.text hasPrefix:@"http://"]) {        self.descLabel.text = [self.descLabel.text stringByAppendingFormat:@"URL: %@",self.urlTextField.text];    }    //setup titleLabel    [self.titleLabel setFont:[UIFont systemFontOfSize:17]];    [self.titleLabel setBackgroundColor:[UIColor clearColor]];    [self.titleLabel setNumberOfLines:0];    [self.titleLabel sizeToFit];    //setup descLabel    [self.descLabel setBackgroundColor:[UIColor clearColor]];    [self.descLabel setFont:[UIFont systemFontOfSize:12]];    [self.descLabel setNumberOfLines:0];    [self.descLabel sizeToFit];        //setup titleView    self.titleView.frame = CGRectMake(106, kStartTitleY, self.titleLabel.frame.size.width, self.titleLabel.frame.size.height);    //setup descView    self.descView.frame = CGRectMake(106, kStartTitleY+self.titleView.frame.size.height, self.descLabel.frame.size.width, self.descLabel.frame.size.height+30);        [self.titleView addSubview:self.titleLabel];    [self.descView addSubview:self.descLabel];    [self.view addSubview:self.titleView];    [self.view addSubview:self.descView];        //setup saveButton    CGFloat saveViewYPoint = kStartTitleY + self.titleView.frame.size.height + self.descView.frame.size.height;    self.saveButton.frame = CGRectMake(0, saveViewYPoint, self.saveButton.frame.size.width, self.saveButton.frame.size.height);    [self.view addSubview:self.saveButton];        // Setup shareView at bottom    CGFloat shareViewYPoint = saveViewYPoint + self.saveButton.frame.size.height;    self.shareView.frame = CGRectMake(0, shareViewYPoint, self.shareView.frame.size.width, self.shareView.frame.size.height);    [self.view addSubview:self.shareView];    //    NSString *qrcodeId = [self processCreateContactQR];//    Barcode *barcode = [[Barcode alloc] init];//    [barcode setupQRCode:[NSString stringWithFormat:@"%@/preview/",APP_API_URL]];//    self.imagePreview.image = barcode.qRBarcode;//    [barcode release];        self.imagePreview.image = [UIImage imageNamed:@"preview"];    [self.previewButton setTitle:@"Update Preview" forState:UIControlStateNormal];        // show the bottom view for the result    self.contentView.frame = CGRectMake(0, 0.0f, self.contentView.frame.size.width, kFrameHeightOnKeyboardDown+64);    [self.scroller setContentSize:CGSizeMake(self.contentView.frame.size.width, kFrameHeightOnKeyboardDown+64)];        // auto scroll to bottom    CGPoint bottomOffset = CGPointMake(0, self.scroller.contentSize.height - self.scroller.bounds.size.height);    [self.scroller setContentOffset:bottomOffset animated:YES];}- (void)processCreateContactQR{    NSString *urlString = [NSString stringWithFormat:@"%@/api/qrcode_contact.php?token=%@",APP_API_URL,[[[NSUserDefaults standardUserDefaults] objectForKey:@"tokenString"]mutableCopy]];            NSString *dataContent = [NSString stringWithFormat:@"{\"app_title\":\"%@\",\"category_id\":\"%@\",\"contact_name\":\"%@\",\"contact_organization\":\"%@\",\"contact_email\":\"%@\",\"contact_mobile_phone_number\":\"%@\",\"contact_phone_number\":\"%@\",\"contact_fax\":\"%@\",\"contact_address\":\"%@\",\"contact_city\":\"%@\",\"contact_postcode\":\"%@\",\"contact_state\":\"%@\",\"contact_country\":\"%@\",\"contact_url\":\"%@\"}",                             self.appTitleTextField.text,                             [self.categories objectForKey:self.categoryTextField.text],                             self.nameTextField.text,                             self.organizationTextField.text,                             self.emailTextField.text,                             self.mobileTextField.text,                             self.phoneTextField.text,                             self.faxTextField.text,                             self.addressTextField.text,                             self.cityTextField.text,                             self.postcodeTextField.text,                             self.stateTextField.text,                             self.countryTextField.text,                             self.urlTextField.text];        NSString *response = [ASIWrapper requestPostJSONWithStringURL:urlString andDataContent:dataContent];    NSLog(@"abc: %@, def:%@",dataContent, response);    NSDictionary *resultsDictionary = [[response objectFromJSONString] mutableCopy];        if([resultsDictionary count])    {        NSString *status = [resultsDictionary objectForKey:@"status"];        NSString *msg = [resultsDictionary objectForKey:@"message"];                if ([status isEqualToString:@"ok"])        {            qrcodeId = [resultsDictionary objectForKey:@"qrcode_id"];            NSLog(@"Success submit contact");            Barcode *barcode = [[Barcode alloc] init];            [barcode setupQRCode:[NSString stringWithFormat:@"http://%@/scan/%@",SCAN_URL,qrcodeId]];            self.imagePreview.image = barcode.qRBarcode;            [barcode release];                        [self.previewButton setEnabled:NO];            [self.saveButton setEnabled:NO];            [self.shareView setHidden:NO];        }        else if([msg isEqualToString:@"Request timed out."])        {            CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Request Timed Out" message:@"Please check on the JAM-BU create box" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];            [alert show];            [alert release];        }        else{            NSLog(@"Submit contact error!");            CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"JAM-BU Create" message:[resultsDictionary objectForKey:@"message"] delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];            [alert show];            [alert release];//            if ([[resultsDictionary objectForKey:@"message"] isEqualToString:@"Request timed out."]) {//                CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"JAM-BU Create" message:@"Request timed out. Please try again later." delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];//                [alert show];//                [alert release];//            }        }    }    [DejalBezelActivityView removeViewAnimated:YES];}#pragma mark -#pragma mark PickerView action button- (void)getCategoriesFromAPI{        NSString *urlString = [NSString stringWithFormat:@"%@/api/qrcode_category.php?token=%@",APP_API_URL,[[[NSUserDefaults standardUserDefaults] objectForKey:@"tokenString"]mutableCopy]];    NSString *dataContent = [NSString stringWithFormat:@"{\"src\":\"\"}"];    NSDictionary *cat;    NSString *response = [ASIWrapper requestPostJSONWithStringURL:urlString andDataContent:dataContent];    NSDictionary *resultsDictionary = [[response objectFromJSONString] mutableCopy];        NSLog(@"resp: %@",response);    if([resultsDictionary count])    {        NSString *status = [resultsDictionary objectForKey:@"status"];        if ([status isEqualToString:@"ok"])        {            cat = [resultsDictionary objectForKey:@"list"];                        for (id row in cat)            {                [self.categories setObject:[row objectForKey:@"category_id"] forKey:[row objectForKey:@"category_name"]];            }                        [DejalBezelActivityView removeViewAnimated:YES];        }        else        {            CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Create Failed" message:@"Connection failure. Please try again later" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];            alert.tag = kAlertNoConnection;            [alert show];            [alert release];                    }            }}- (IBAction)pickerDoneClicked:(id)sender{//    UITextField *catBox = (UITextField *)[self.view viewWithTag:10];    if (![self.categoryTextField.text length]) {        self.categoryTextField.text = [self.dataArray objectAtIndex:0];    }        self.categoryId = [self.categories objectForKey:self.categoryTextField.text];    [self.categoryTextField resignFirstResponder];}- (IBAction)pickerCancelClicked{    self.categoryTextField.text = nil;    [self.categoryTextField resignFirstResponder];}#pragma mark -#pragma mark MFMail delegate- (void)mailComposeController:(MFMailComposeViewController*)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError*)error{    NSString *msg;    switch (result)    {        case MFMailComposeResultCancelled:            NSLog(@"Mail cancelled: you cancelled the operation and no email message was queued.");            msg = @"";            break;        case MFMailComposeResultSaved:            NSLog(@"Mail saved: you saved the email message in the drafts folder.");            msg = [NSString stringWithFormat:@"Email has been saved to draft"];            break;        case MFMailComposeResultSent:            NSLog(@"Mail send: the email message is queued in the outbox. It is ready to send.");            msg = [NSString stringWithFormat:@"Email has been successfully sent"];            break;        case MFMailComposeResultFailed:            NSLog(@"Mail failed: the email message was not saved or queued, possibly due to an error.");            msg = [NSString stringWithFormat:@"Email was not sent, possibly due to an error"];            break;        default:            NSLog(@"Mail not sent.");            break;    }        if (![msg isEqualToString:@""]) {        CustomAlertView *alert = [[CustomAlertView alloc] initWithTitle:@"Save" message:msg delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];        [alert show];        [alert release];    }            // Remove the mail view    [self dismissModalViewControllerAnimated:YES];}#pragma mark -#pragma mark UIPickerView Delegate// Number of components.-(NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{    return 1;}// Total rows in our component.-(NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{    return [self.dataArray count];}// Display each row's data.-(NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component{    return [self.dataArray objectAtIndex: row];}// Do something with the selected row.-(void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component{        NSLog(@"option selected %d", row);        self.categoryTextField.text = [self.dataArray objectAtIndex:row];}- (void)didReceiveMemoryWarning{    [super didReceiveMemoryWarning];    // Dispose of any resources that can be recreated.}- (void)viewWillAppear:(BOOL)animated{}//- (void)viewWillDisappear:(BOOL)animated//{//    NSLog(@"vwd");//    [self.scroller setContentOffset:CGPointMake(0, 0) animated:NO];//    for (UITextField *aView in [self.contentView subviews]) {//        if ([aView isKindOfClass:[UITextField class]]) {//            aView.text = nil;//        }//    }//    //    [self.previewButton setTitle:@"Preview" forState:UIControlStateNormal];//    [self.previewButton setEnabled:YES];//    [self.saveButton setEnabled:YES];//    [self.shareView setHidden:YES];//}- (void)dealloc {    [_imagePreview release];    [_contentView release];    [_nameTextField release];    [_organizationTextField release];    [_emailTextField release];    [_appTitleTextField release];    [_mobileTextField release];    [_phoneTextField release];    [_faxTextField release];    [_addressTextField release];    [_cityTextField release];    [_postcodeTextField release];    [_stateTextField release];    [_countryTextField release];    [_urlTextField release];    [_descLabel release];    [_previewButton release];    [_saveButton release];    [_shareView release];    [_titleLabel release];    [_titleView release];    [_descLabel release];    [_descView release];    [super dealloc];}- (void)viewDidUnload {    [self setImagePreview:nil];    [self setContentView:nil];    [self setNameTextField:nil];    [self setOrganizationTextField:nil];    [self setEmailTextField:nil];    [self setAppTitleTextField:nil];    [self setMobileTextField:nil];    [self setPhoneTextField:nil];    [self setFaxTextField:nil];    [self setAddressTextField:nil];    [self setCityTextField:nil];    [self setPostcodeTextField:nil];    [self setStateTextField:nil];    [self setCountryTextField:nil];    [self setUrlTextField:nil];    [self setDescLabel:nil];    [self setPreviewButton:nil];    [self setSaveButton:nil];    [self setShareView:nil];    [self setTitleLabel:nil];    [self setTitleView:nil];    [self setDescLabel:nil];    [self setDescView:nil];    [super viewDidUnload];}@end